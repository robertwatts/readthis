---
import Layout from "../../layouts/Layout.astro";
import { BookService } from "../../services/bookService.pocketbase";
import GoogleBooksClient from "../../services/googleBooksClient";
import OpenLibraryClient from "../../services/openLibraryClient";

export const prerender = false;

const bookService = new BookService();
const googleClient = new GoogleBooksClient(import.meta.env.GOOGLE_BOOKS_API_KEY || "");
const openLibraryClient = new OpenLibraryClient();

let isbn = "";
let title = "";
let author = "";
let description = "";
let cover = "";
let message = "";

if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get("action");

  isbn = formData.get("isbn")?.toString() ?? "";

  if (action === "search") {
    if (isbn) {
      const googleBook = await googleClient.fetchBookByISBN(isbn);
      const openBook = await openLibraryClient.fetchBookByISBN(isbn);
      title = googleBook?.volumeInfo.title || openBook?.title || "";
      author =
        googleBook?.volumeInfo.authors?.[0] || openBook?.authors?.[0]?.name || "";
      const openDesc =
        typeof openBook?.description === "string"
          ? openBook?.description
          : openBook?.description?.value;
      description = googleBook?.volumeInfo.description || openDesc || "";
      cover =
        googleBook?.volumeInfo.imageLinks?.thumbnail || openBook?.cover?.medium || "";
    }
  } else if (action === "create") {
    title = formData.get("title")?.toString() || "";
    author = formData.get("author")?.toString() || "";
    description = formData.get("description")?.toString() || "";
    cover = formData.get("cover")?.toString() || "";
    const created = await bookService.createBook({ title, author, description, isbn, cover });
    if (created) {
      message = "Book added successfully.";
      isbn = title = author = description = cover = "";
    } else {
      message = "Failed to add book.";
    }
  }
}
---

<Layout title="Add Book | ReadThis">
  <main class="container mx-auto px-4 py-8">
    <a href="/books" class="inline-block mb-6 text-blue-600 hover:underline">‚Üê Back to Books</a>
    <h1 class="text-3xl font-bold mb-4">Add Book</h1>

    {message && <p class="mb-4 text-green-600">{message}</p>}

    <form method="post" class="mb-8 flex items-end gap-2">
      <input type="hidden" name="action" value="search" />
      <label class="block">
        <span class="block text-sm font-medium mb-1">Search by ISBN</span>
        <input type="text" name="isbn" value={isbn} class="border rounded p-2" required />
      </label>
      <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">Search</button>
    </form>

    {(title || author || description || cover) && (
      <form method="post" class="space-y-4">
        <input type="hidden" name="action" value="create" />
        <input type="hidden" name="isbn" value={isbn} />
        <div>
          <label class="block mb-1 font-medium">Title</label>
          <input type="text" name="title" value={title} class="w-full border rounded p-2" required />
        </div>
        <div>
          <label class="block mb-1 font-medium">Author</label>
          <input type="text" name="author" value={author} class="w-full border rounded p-2" />
        </div>
        <div>
          <label class="block mb-1 font-medium">Description</label>
          <textarea name="description" class="w-full border rounded p-2" rows="4">{description}</textarea>
        </div>
        <div>
          <label class="block mb-1 font-medium">Cover URL</label>
          <input type="text" name="cover" value={cover} class="w-full border rounded p-2" />
        </div>
        <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">Add Book</button>
      </form>
    )}
  </main>
</Layout>
